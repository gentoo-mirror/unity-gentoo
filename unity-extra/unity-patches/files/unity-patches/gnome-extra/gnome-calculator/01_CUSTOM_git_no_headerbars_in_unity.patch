 src/Makefile.am           |   1 +
 src/math-preferences.c    | 869 +++++++++++++++++++++++-----------------------
 src/math-preferences.vala |   8 +-
 src/math-window.c         | 209 ++++++++---
 src/math-window.vala      |  27 ++
 src/xdg-desktop.c         | 115 ++++++
 src/xdg-desktop.vala      |  22 ++
 7 files changed, 775 insertions(+), 476 deletions(-)

diff --git a/src/Makefile.am b/src/Makefile.am
index dbe0871..06132b1 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -26,6 +26,7 @@ gnome_calculator_SOURCES = \
 	math-variable-popover.vala \
 	math-window.vala \
 	math-history.vala \
+	xdg-desktop.vala \
 	$(BUILT_SOURCES)
 
 gnome_calculator_VALAFLAGS = \
diff --git a/src/math-preferences.c b/src/math-preferences.c
index 2b36d47..9979a2c 100644
--- a/src/math-preferences.c
+++ b/src/math-preferences.c
@@ -15,12 +15,12 @@
 #include <glib-object.h>
 #include <gtk/gtk.h>
 #include "libcalculator.h"
+#include <stdlib.h>
+#include <string.h>
 #include <gdk/gdk.h>
 #include <glib/gi18n-lib.h>
 #include <float.h>
 #include <math.h>
-#include <stdlib.h>
-#include <string.h>
 
 
 #define TYPE_MATH_PREFERENCES_DIALOG (math_preferences_dialog_get_type ())
@@ -65,6 +65,7 @@ enum  {
 };
 MathPreferencesDialog* math_preferences_dialog_new (MathEquation* eq);
 MathPreferencesDialog* math_preferences_dialog_construct (GType object_type, MathEquation* eq);
+gboolean is_desktop (const gchar* name);
 static void math_preferences_dialog_real_response (GtkDialog* base, gint id);
 static gboolean math_preferences_dialog_real_delete_event (GtkWidget* base, GdkEventAny* event);
 static void math_preferences_dialog_number_format_combo_changed_cb (MathPreferencesDialog* self, GtkComboBox* combo);
@@ -102,10 +103,18 @@ static void _vala_math_preferences_dialog_set_property (GObject * object, guint
 
 MathPreferencesDialog* math_preferences_dialog_construct (GType object_type, MathEquation* eq) {
 	MathPreferencesDialog * self = NULL;
-	MathEquation* _tmp0_ = NULL;
+	gint _tmp0_ = 0;
+	gboolean _tmp1_ = FALSE;
+	MathEquation* _tmp2_ = NULL;
 	g_return_val_if_fail (eq != NULL, NULL);
-	_tmp0_ = eq;
-	self = (MathPreferencesDialog*) g_object_new (object_type, "use-header-bar", 1, "equation", _tmp0_, "resizable", FALSE, NULL);
+	_tmp1_ = is_desktop ("Unity");
+	if (_tmp1_) {
+		_tmp0_ = 0;
+	} else {
+		_tmp0_ = 1;
+	}
+	_tmp2_ = eq;
+	self = (MathPreferencesDialog*) g_object_new (object_type, "use-header-bar", _tmp0_, "equation", _tmp2_, "resizable", FALSE, NULL);
 	return self;
 }
 
@@ -489,586 +498,594 @@ static GObject * math_preferences_dialog_constructor (GType type, guint n_constr
 	GObjectClass * parent_class;
 	MathPreferencesDialog * self;
 	const gchar* _tmp0_ = NULL;
-	GtkWidget* _tmp1_ = NULL;
+	gboolean _tmp1_ = FALSE;
 	GtkGrid* grid = NULL;
-	GtkGrid* _tmp2_ = NULL;
-	GtkGrid* _tmp3_ = NULL;
 	GtkGrid* _tmp4_ = NULL;
 	GtkGrid* _tmp5_ = NULL;
 	GtkGrid* _tmp6_ = NULL;
-	GtkBox* _tmp7_ = NULL;
+	GtkGrid* _tmp7_ = NULL;
 	GtkGrid* _tmp8_ = NULL;
+	GtkBox* _tmp9_ = NULL;
+	GtkGrid* _tmp10_ = NULL;
 	GtkLabel* label = NULL;
-	const gchar* _tmp9_ = NULL;
-	GtkLabel* _tmp10_ = NULL;
-	GtkLabel* _tmp11_ = NULL;
+	const gchar* _tmp11_ = NULL;
 	GtkLabel* _tmp12_ = NULL;
-	GtkGrid* _tmp13_ = NULL;
+	GtkLabel* _tmp13_ = NULL;
 	GtkLabel* _tmp14_ = NULL;
-	GtkComboBox* _tmp15_ = NULL;
+	GtkGrid* _tmp15_ = NULL;
 	GtkLabel* _tmp16_ = NULL;
 	GtkComboBox* _tmp17_ = NULL;
-	GtkComboBox* _tmp18_ = NULL;
+	GtkLabel* _tmp18_ = NULL;
 	GtkComboBox* _tmp19_ = NULL;
-	GtkGrid* _tmp20_ = NULL;
+	GtkComboBox* _tmp20_ = NULL;
 	GtkComboBox* _tmp21_ = NULL;
-	GtkListStore* model = NULL;
-	GtkListStore* _tmp22_ = NULL;
+	GtkGrid* _tmp22_ = NULL;
 	GtkComboBox* _tmp23_ = NULL;
+	GtkListStore* model = NULL;
 	GtkListStore* _tmp24_ = NULL;
+	GtkComboBox* _tmp25_ = NULL;
+	GtkListStore* _tmp26_ = NULL;
 	GtkTreeIter iter = {0};
-	GtkListStore* _tmp25_ = NULL;
-	GtkTreeIter _tmp26_ = {0};
 	GtkListStore* _tmp27_ = NULL;
 	GtkTreeIter _tmp28_ = {0};
-	const gchar* _tmp29_ = NULL;
-	GtkListStore* _tmp30_ = NULL;
-	GtkTreeIter _tmp31_ = {0};
+	GtkListStore* _tmp29_ = NULL;
+	GtkTreeIter _tmp30_ = {0};
+	const gchar* _tmp31_ = NULL;
 	GtkListStore* _tmp32_ = NULL;
 	GtkTreeIter _tmp33_ = {0};
-	const gchar* _tmp34_ = NULL;
-	GtkListStore* _tmp35_ = NULL;
-	GtkTreeIter _tmp36_ = {0};
+	GtkListStore* _tmp34_ = NULL;
+	GtkTreeIter _tmp35_ = {0};
+	const gchar* _tmp36_ = NULL;
 	GtkListStore* _tmp37_ = NULL;
 	GtkTreeIter _tmp38_ = {0};
-	const gchar* _tmp39_ = NULL;
-	GtkListStore* _tmp40_ = NULL;
-	GtkTreeIter _tmp41_ = {0};
+	GtkListStore* _tmp39_ = NULL;
+	GtkTreeIter _tmp40_ = {0};
+	const gchar* _tmp41_ = NULL;
 	GtkListStore* _tmp42_ = NULL;
 	GtkTreeIter _tmp43_ = {0};
-	const gchar* _tmp44_ = NULL;
+	GtkListStore* _tmp44_ = NULL;
+	GtkTreeIter _tmp45_ = {0};
+	const gchar* _tmp46_ = NULL;
 	GtkCellRendererText* renderer = NULL;
-	GtkCellRendererText* _tmp45_ = NULL;
-	GtkComboBox* _tmp46_ = NULL;
 	GtkCellRendererText* _tmp47_ = NULL;
 	GtkComboBox* _tmp48_ = NULL;
 	GtkCellRendererText* _tmp49_ = NULL;
+	GtkComboBox* _tmp50_ = NULL;
+	GtkCellRendererText* _tmp51_ = NULL;
 	GtkBox* format_options_box = NULL;
-	GtkBox* _tmp50_ = NULL;
-	GtkBox* _tmp51_ = NULL;
 	GtkBox* _tmp52_ = NULL;
 	GtkBox* _tmp53_ = NULL;
 	GtkBox* _tmp54_ = NULL;
 	GtkBox* _tmp55_ = NULL;
-	GtkGrid* _tmp56_ = NULL;
+	GtkBox* _tmp56_ = NULL;
 	GtkBox* _tmp57_ = NULL;
+	GtkGrid* _tmp58_ = NULL;
+	GtkBox* _tmp59_ = NULL;
 	GtkAdjustment* decimal_places_adjustment = NULL;
-	GtkAdjustment* _tmp58_ = NULL;
-	GtkAdjustment* _tmp59_ = NULL;
-	GtkSpinButton* _tmp60_ = NULL;
-	const gchar* _tmp61_ = NULL;
-	GtkLabel* _tmp62_ = NULL;
-	GtkLabel* _tmp63_ = NULL;
-	GtkSpinButton* _tmp64_ = NULL;
+	GtkAdjustment* _tmp60_ = NULL;
+	GtkAdjustment* _tmp61_ = NULL;
+	GtkSpinButton* _tmp62_ = NULL;
+	const gchar* _tmp63_ = NULL;
+	GtkLabel* _tmp64_ = NULL;
 	GtkLabel* _tmp65_ = NULL;
-	GtkLabel* _tmp66_ = NULL;
-	GtkGrid* _tmp67_ = NULL;
+	GtkSpinButton* _tmp66_ = NULL;
+	GtkLabel* _tmp67_ = NULL;
 	GtkLabel* _tmp68_ = NULL;
-	GtkSpinButton* _tmp69_ = NULL;
-	GtkSpinButton* _tmp70_ = NULL;
-	GtkGrid* _tmp71_ = NULL;
+	GtkGrid* _tmp69_ = NULL;
+	GtkLabel* _tmp70_ = NULL;
+	GtkSpinButton* _tmp71_ = NULL;
 	GtkSpinButton* _tmp72_ = NULL;
-	const gchar* _tmp73_ = NULL;
-	GtkLabel* _tmp74_ = NULL;
-	GtkLabel* _tmp75_ = NULL;
+	GtkGrid* _tmp73_ = NULL;
+	GtkSpinButton* _tmp74_ = NULL;
+	const gchar* _tmp75_ = NULL;
 	GtkLabel* _tmp76_ = NULL;
-	GtkGrid* _tmp77_ = NULL;
+	GtkLabel* _tmp77_ = NULL;
 	GtkLabel* _tmp78_ = NULL;
-	GtkLabel* _tmp79_ = NULL;
-	GtkSwitch* _tmp80_ = NULL;
-	GtkSwitch* _tmp81_ = NULL;
+	GtkGrid* _tmp79_ = NULL;
+	GtkLabel* _tmp80_ = NULL;
+	GtkLabel* _tmp81_ = NULL;
 	GtkSwitch* _tmp82_ = NULL;
 	GtkSwitch* _tmp83_ = NULL;
 	GtkSwitch* _tmp84_ = NULL;
-	GtkGrid* _tmp85_ = NULL;
+	GtkSwitch* _tmp85_ = NULL;
 	GtkSwitch* _tmp86_ = NULL;
-	const gchar* _tmp87_ = NULL;
-	GtkLabel* _tmp88_ = NULL;
-	GtkLabel* _tmp89_ = NULL;
+	GtkGrid* _tmp87_ = NULL;
+	GtkSwitch* _tmp88_ = NULL;
+	const gchar* _tmp89_ = NULL;
 	GtkLabel* _tmp90_ = NULL;
 	GtkLabel* _tmp91_ = NULL;
-	GtkSwitch* _tmp92_ = NULL;
-	GtkGrid* _tmp93_ = NULL;
-	GtkLabel* _tmp94_ = NULL;
-	GtkSwitch* _tmp95_ = NULL;
-	GtkSwitch* _tmp96_ = NULL;
+	GtkLabel* _tmp92_ = NULL;
+	GtkLabel* _tmp93_ = NULL;
+	GtkSwitch* _tmp94_ = NULL;
+	GtkGrid* _tmp95_ = NULL;
+	GtkLabel* _tmp96_ = NULL;
 	GtkSwitch* _tmp97_ = NULL;
 	GtkSwitch* _tmp98_ = NULL;
-	GtkGrid* _tmp99_ = NULL;
+	GtkSwitch* _tmp99_ = NULL;
 	GtkSwitch* _tmp100_ = NULL;
-	const gchar* _tmp101_ = NULL;
-	GtkLabel* _tmp102_ = NULL;
-	GtkLabel* _tmp103_ = NULL;
+	GtkGrid* _tmp101_ = NULL;
+	GtkSwitch* _tmp102_ = NULL;
+	const gchar* _tmp103_ = NULL;
 	GtkLabel* _tmp104_ = NULL;
-	GtkGrid* _tmp105_ = NULL;
+	GtkLabel* _tmp105_ = NULL;
 	GtkLabel* _tmp106_ = NULL;
-	GtkComboBox* _tmp107_ = NULL;
+	GtkGrid* _tmp107_ = NULL;
 	GtkLabel* _tmp108_ = NULL;
 	GtkComboBox* _tmp109_ = NULL;
-	GtkComboBox* _tmp110_ = NULL;
+	GtkLabel* _tmp110_ = NULL;
 	GtkComboBox* _tmp111_ = NULL;
-	GtkGrid* _tmp112_ = NULL;
+	GtkComboBox* _tmp112_ = NULL;
 	GtkComboBox* _tmp113_ = NULL;
-	GtkListStore* _tmp114_ = NULL;
+	GtkGrid* _tmp114_ = NULL;
 	GtkComboBox* _tmp115_ = NULL;
 	GtkListStore* _tmp116_ = NULL;
-	GtkListStore* _tmp117_ = NULL;
-	GtkTreeIter _tmp118_ = {0};
+	GtkComboBox* _tmp117_ = NULL;
+	GtkListStore* _tmp118_ = NULL;
 	GtkListStore* _tmp119_ = NULL;
 	GtkTreeIter _tmp120_ = {0};
-	const gchar* _tmp121_ = NULL;
-	GtkListStore* _tmp122_ = NULL;
-	GtkTreeIter _tmp123_ = {0};
+	GtkListStore* _tmp121_ = NULL;
+	GtkTreeIter _tmp122_ = {0};
+	const gchar* _tmp123_ = NULL;
 	GtkListStore* _tmp124_ = NULL;
 	GtkTreeIter _tmp125_ = {0};
-	const gchar* _tmp126_ = NULL;
-	GtkListStore* _tmp127_ = NULL;
-	GtkTreeIter _tmp128_ = {0};
+	GtkListStore* _tmp126_ = NULL;
+	GtkTreeIter _tmp127_ = {0};
+	const gchar* _tmp128_ = NULL;
 	GtkListStore* _tmp129_ = NULL;
 	GtkTreeIter _tmp130_ = {0};
-	const gchar* _tmp131_ = NULL;
-	GtkCellRendererText* _tmp132_ = NULL;
-	GtkComboBox* _tmp133_ = NULL;
+	GtkListStore* _tmp131_ = NULL;
+	GtkTreeIter _tmp132_ = {0};
+	const gchar* _tmp133_ = NULL;
 	GtkCellRendererText* _tmp134_ = NULL;
 	GtkComboBox* _tmp135_ = NULL;
 	GtkCellRendererText* _tmp136_ = NULL;
-	const gchar* _tmp137_ = NULL;
-	GtkLabel* _tmp138_ = NULL;
-	GtkLabel* _tmp139_ = NULL;
+	GtkComboBox* _tmp137_ = NULL;
+	GtkCellRendererText* _tmp138_ = NULL;
+	const gchar* _tmp139_ = NULL;
 	GtkLabel* _tmp140_ = NULL;
-	GtkGrid* _tmp141_ = NULL;
+	GtkLabel* _tmp141_ = NULL;
 	GtkLabel* _tmp142_ = NULL;
-	GtkComboBox* _tmp143_ = NULL;
+	GtkGrid* _tmp143_ = NULL;
 	GtkLabel* _tmp144_ = NULL;
 	GtkComboBox* _tmp145_ = NULL;
-	GtkComboBox* _tmp146_ = NULL;
+	GtkLabel* _tmp146_ = NULL;
 	GtkComboBox* _tmp147_ = NULL;
-	GtkGrid* _tmp148_ = NULL;
+	GtkComboBox* _tmp148_ = NULL;
 	GtkComboBox* _tmp149_ = NULL;
-	GtkListStore* _tmp150_ = NULL;
+	GtkGrid* _tmp150_ = NULL;
 	GtkComboBox* _tmp151_ = NULL;
 	GtkListStore* _tmp152_ = NULL;
-	GtkListStore* _tmp153_ = NULL;
-	GtkTreeIter _tmp154_ = {0};
+	GtkComboBox* _tmp153_ = NULL;
+	GtkListStore* _tmp154_ = NULL;
 	GtkListStore* _tmp155_ = NULL;
 	GtkTreeIter _tmp156_ = {0};
-	const gchar* _tmp157_ = NULL;
-	GtkListStore* _tmp158_ = NULL;
-	GtkTreeIter _tmp159_ = {0};
+	GtkListStore* _tmp157_ = NULL;
+	GtkTreeIter _tmp158_ = {0};
+	const gchar* _tmp159_ = NULL;
 	GtkListStore* _tmp160_ = NULL;
 	GtkTreeIter _tmp161_ = {0};
-	const gchar* _tmp162_ = NULL;
-	GtkListStore* _tmp163_ = NULL;
-	GtkTreeIter _tmp164_ = {0};
+	GtkListStore* _tmp162_ = NULL;
+	GtkTreeIter _tmp163_ = {0};
+	const gchar* _tmp164_ = NULL;
 	GtkListStore* _tmp165_ = NULL;
 	GtkTreeIter _tmp166_ = {0};
-	const gchar* _tmp167_ = NULL;
-	GtkListStore* _tmp168_ = NULL;
-	GtkTreeIter _tmp169_ = {0};
+	GtkListStore* _tmp167_ = NULL;
+	GtkTreeIter _tmp168_ = {0};
+	const gchar* _tmp169_ = NULL;
 	GtkListStore* _tmp170_ = NULL;
 	GtkTreeIter _tmp171_ = {0};
-	const gchar* _tmp172_ = NULL;
-	GtkCellRendererText* _tmp173_ = NULL;
-	GtkComboBox* _tmp174_ = NULL;
+	GtkListStore* _tmp172_ = NULL;
+	GtkTreeIter _tmp173_ = {0};
+	const gchar* _tmp174_ = NULL;
 	GtkCellRendererText* _tmp175_ = NULL;
 	GtkComboBox* _tmp176_ = NULL;
 	GtkCellRendererText* _tmp177_ = NULL;
-	GtkSpinButton* _tmp178_ = NULL;
-	MathEquation* _tmp179_ = NULL;
-	gint _tmp180_ = 0;
-	gint _tmp181_ = 0;
-	MathEquation* _tmp182_ = NULL;
-	GtkSwitch* _tmp183_ = NULL;
+	GtkComboBox* _tmp178_ = NULL;
+	GtkCellRendererText* _tmp179_ = NULL;
+	GtkSpinButton* _tmp180_ = NULL;
+	MathEquation* _tmp181_ = NULL;
+	gint _tmp182_ = 0;
+	gint _tmp183_ = 0;
 	MathEquation* _tmp184_ = NULL;
-	gboolean _tmp185_ = FALSE;
-	gboolean _tmp186_ = FALSE;
-	MathEquation* _tmp187_ = NULL;
-	GtkSwitch* _tmp188_ = NULL;
+	GtkSwitch* _tmp185_ = NULL;
+	MathEquation* _tmp186_ = NULL;
+	gboolean _tmp187_ = FALSE;
+	gboolean _tmp188_ = FALSE;
 	MathEquation* _tmp189_ = NULL;
-	gboolean _tmp190_ = FALSE;
-	gboolean _tmp191_ = FALSE;
-	MathEquation* _tmp192_ = NULL;
-	GtkComboBox* _tmp193_ = NULL;
+	GtkSwitch* _tmp190_ = NULL;
+	MathEquation* _tmp191_ = NULL;
+	gboolean _tmp192_ = FALSE;
+	gboolean _tmp193_ = FALSE;
 	MathEquation* _tmp194_ = NULL;
-	DisplayFormat _tmp195_ = 0;
-	DisplayFormat _tmp196_ = 0;
-	MathEquation* _tmp197_ = NULL;
-	GtkComboBox* _tmp198_ = NULL;
+	GtkComboBox* _tmp195_ = NULL;
+	MathEquation* _tmp196_ = NULL;
+	DisplayFormat _tmp197_ = 0;
+	DisplayFormat _tmp198_ = 0;
 	MathEquation* _tmp199_ = NULL;
-	gint _tmp200_ = 0;
-	gint _tmp201_ = 0;
-	MathEquation* _tmp202_ = NULL;
-	GtkComboBox* _tmp203_ = NULL;
+	GtkComboBox* _tmp200_ = NULL;
+	MathEquation* _tmp201_ = NULL;
+	gint _tmp202_ = 0;
+	gint _tmp203_ = 0;
 	MathEquation* _tmp204_ = NULL;
-	AngleUnit _tmp205_ = 0;
-	AngleUnit _tmp206_ = 0;
-	MathEquation* _tmp207_ = NULL;
+	GtkComboBox* _tmp205_ = NULL;
+	MathEquation* _tmp206_ = NULL;
+	AngleUnit _tmp207_ = 0;
+	AngleUnit _tmp208_ = 0;
+	MathEquation* _tmp209_ = NULL;
 	parent_class = G_OBJECT_CLASS (math_preferences_dialog_parent_class);
 	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
 	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_MATH_PREFERENCES_DIALOG, MathPreferencesDialog);
 	_tmp0_ = _ ("Preferences");
 	gtk_window_set_title ((GtkWindow*) self, _tmp0_);
 	gtk_container_set_border_width ((GtkContainer*) self, (guint) 8);
-	_tmp1_ = gtk_dialog_get_header_bar ((GtkDialog*) self);
-	gtk_header_bar_set_show_close_button (G_TYPE_CHECK_INSTANCE_CAST (_tmp1_, gtk_header_bar_get_type (), GtkHeaderBar), TRUE);
-	_tmp2_ = (GtkGrid*) gtk_grid_new ();
-	g_object_ref_sink (_tmp2_);
-	grid = _tmp2_;
-	_tmp3_ = grid;
-	gtk_widget_show ((GtkWidget*) _tmp3_);
-	_tmp4_ = grid;
-	gtk_container_set_border_width ((GtkContainer*) _tmp4_, (guint) 5);
+	_tmp1_ = is_desktop ("Unity");
+	if (_tmp1_) {
+		const gchar* _tmp2_ = NULL;
+		_tmp2_ = _ ("_Close");
+		gtk_dialog_add_button ((GtkDialog*) self, _tmp2_, 0);
+	} else {
+		GtkWidget* _tmp3_ = NULL;
+		_tmp3_ = gtk_dialog_get_header_bar ((GtkDialog*) self);
+		gtk_header_bar_set_show_close_button (G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_header_bar_get_type (), GtkHeaderBar), TRUE);
+	}
+	_tmp4_ = (GtkGrid*) gtk_grid_new ();
+	g_object_ref_sink (_tmp4_);
+	grid = _tmp4_;
 	_tmp5_ = grid;
-	gtk_grid_set_column_spacing (_tmp5_, 6);
+	gtk_widget_show ((GtkWidget*) _tmp5_);
 	_tmp6_ = grid;
-	gtk_grid_set_row_spacing (_tmp6_, 12);
-	_tmp7_ = (GtkBox*) gtk_dialog_get_content_area ((GtkDialog*) self);
+	gtk_container_set_border_width ((GtkContainer*) _tmp6_, (guint) 5);
+	_tmp7_ = grid;
+	gtk_grid_set_column_spacing (_tmp7_, 6);
 	_tmp8_ = grid;
-	gtk_box_pack_start (_tmp7_, (GtkWidget*) _tmp8_, TRUE, TRUE, (guint) 0);
-	_tmp9_ = _ ("Number _Format:");
-	_tmp10_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp9_);
-	g_object_ref_sink (_tmp10_);
-	label = _tmp10_;
-	_tmp11_ = label;
-	gtk_widget_show ((GtkWidget*) _tmp11_);
-	_tmp12_ = label;
-	gtk_label_set_xalign (_tmp12_, (gfloat) 0);
-	_tmp13_ = grid;
+	gtk_grid_set_row_spacing (_tmp8_, 12);
+	_tmp9_ = (GtkBox*) gtk_dialog_get_content_area ((GtkDialog*) self);
+	_tmp10_ = grid;
+	gtk_box_pack_start (_tmp9_, (GtkWidget*) _tmp10_, TRUE, TRUE, (guint) 0);
+	_tmp11_ = _ ("Number _Format:");
+	_tmp12_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp11_);
+	g_object_ref_sink (_tmp12_);
+	label = _tmp12_;
+	_tmp13_ = label;
+	gtk_widget_show ((GtkWidget*) _tmp13_);
 	_tmp14_ = label;
-	gtk_grid_attach (_tmp13_, (GtkWidget*) _tmp14_, 0, 0, 1, 1);
-	_tmp15_ = (GtkComboBox*) gtk_combo_box_new ();
-	g_object_ref_sink (_tmp15_);
-	_g_object_unref0 (self->priv->number_format_combo);
-	self->priv->number_format_combo = _tmp15_;
+	gtk_label_set_xalign (_tmp14_, (gfloat) 0);
+	_tmp15_ = grid;
 	_tmp16_ = label;
-	_tmp17_ = self->priv->number_format_combo;
-	gtk_label_set_mnemonic_widget (_tmp16_, (GtkWidget*) _tmp17_);
-	_tmp18_ = self->priv->number_format_combo;
-	gtk_widget_show ((GtkWidget*) _tmp18_);
+	gtk_grid_attach (_tmp15_, (GtkWidget*) _tmp16_, 0, 0, 1, 1);
+	_tmp17_ = (GtkComboBox*) gtk_combo_box_new ();
+	g_object_ref_sink (_tmp17_);
+	_g_object_unref0 (self->priv->number_format_combo);
+	self->priv->number_format_combo = _tmp17_;
+	_tmp18_ = label;
 	_tmp19_ = self->priv->number_format_combo;
-	g_signal_connect_object (_tmp19_, "changed", (GCallback) _math_preferences_dialog_number_format_combo_changed_cb_gtk_combo_box_changed, self, 0);
-	_tmp20_ = grid;
+	gtk_label_set_mnemonic_widget (_tmp18_, (GtkWidget*) _tmp19_);
+	_tmp20_ = self->priv->number_format_combo;
+	gtk_widget_show ((GtkWidget*) _tmp20_);
 	_tmp21_ = self->priv->number_format_combo;
-	gtk_grid_attach (_tmp20_, (GtkWidget*) _tmp21_, 1, 0, 1, 1);
-	_tmp22_ = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_INT, -1);
-	model = _tmp22_;
+	g_signal_connect_object (_tmp21_, "changed", (GCallback) _math_preferences_dialog_number_format_combo_changed_cb_gtk_combo_box_changed, self, 0);
+	_tmp22_ = grid;
 	_tmp23_ = self->priv->number_format_combo;
-	_tmp24_ = model;
-	gtk_combo_box_set_model (_tmp23_, (GtkTreeModel*) _tmp24_);
-	_tmp25_ = model;
-	gtk_list_store_append (_tmp25_, &_tmp26_);
-	iter = _tmp26_;
+	gtk_grid_attach (_tmp22_, (GtkWidget*) _tmp23_, 1, 0, 1, 1);
+	_tmp24_ = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_INT, -1);
+	model = _tmp24_;
+	_tmp25_ = self->priv->number_format_combo;
+	_tmp26_ = model;
+	gtk_combo_box_set_model (_tmp25_, (GtkTreeModel*) _tmp26_);
 	_tmp27_ = model;
-	_tmp28_ = iter;
-	_tmp29_ = _ ("Automatic");
-	gtk_list_store_set (_tmp27_, &_tmp28_, 0, _tmp29_, 1, DISPLAY_FORMAT_AUTOMATIC, -1, -1);
-	_tmp30_ = model;
-	gtk_list_store_append (_tmp30_, &_tmp31_);
-	iter = _tmp31_;
+	gtk_list_store_append (_tmp27_, &_tmp28_);
+	iter = _tmp28_;
+	_tmp29_ = model;
+	_tmp30_ = iter;
+	_tmp31_ = _ ("Automatic");
+	gtk_list_store_set (_tmp29_, &_tmp30_, 0, _tmp31_, 1, DISPLAY_FORMAT_AUTOMATIC, -1, -1);
 	_tmp32_ = model;
-	_tmp33_ = iter;
-	_tmp34_ = _ ("Fixed");
-	gtk_list_store_set (_tmp32_, &_tmp33_, 0, _tmp34_, 1, DISPLAY_FORMAT_FIXED, -1, -1);
-	_tmp35_ = model;
-	gtk_list_store_append (_tmp35_, &_tmp36_);
-	iter = _tmp36_;
+	gtk_list_store_append (_tmp32_, &_tmp33_);
+	iter = _tmp33_;
+	_tmp34_ = model;
+	_tmp35_ = iter;
+	_tmp36_ = _ ("Fixed");
+	gtk_list_store_set (_tmp34_, &_tmp35_, 0, _tmp36_, 1, DISPLAY_FORMAT_FIXED, -1, -1);
 	_tmp37_ = model;
-	_tmp38_ = iter;
-	_tmp39_ = _ ("Scientific");
-	gtk_list_store_set (_tmp37_, &_tmp38_, 0, _tmp39_, 1, DISPLAY_FORMAT_SCIENTIFIC, -1, -1);
-	_tmp40_ = model;
-	gtk_list_store_append (_tmp40_, &_tmp41_);
-	iter = _tmp41_;
+	gtk_list_store_append (_tmp37_, &_tmp38_);
+	iter = _tmp38_;
+	_tmp39_ = model;
+	_tmp40_ = iter;
+	_tmp41_ = _ ("Scientific");
+	gtk_list_store_set (_tmp39_, &_tmp40_, 0, _tmp41_, 1, DISPLAY_FORMAT_SCIENTIFIC, -1, -1);
 	_tmp42_ = model;
-	_tmp43_ = iter;
-	_tmp44_ = _ ("Engineering");
-	gtk_list_store_set (_tmp42_, &_tmp43_, 0, _tmp44_, 1, DISPLAY_FORMAT_ENGINEERING, -1, -1);
-	_tmp45_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
-	g_object_ref_sink (_tmp45_);
-	renderer = _tmp45_;
-	_tmp46_ = self->priv->number_format_combo;
-	_tmp47_ = renderer;
-	gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp46_, (GtkCellRenderer*) _tmp47_, TRUE);
+	gtk_list_store_append (_tmp42_, &_tmp43_);
+	iter = _tmp43_;
+	_tmp44_ = model;
+	_tmp45_ = iter;
+	_tmp46_ = _ ("Engineering");
+	gtk_list_store_set (_tmp44_, &_tmp45_, 0, _tmp46_, 1, DISPLAY_FORMAT_ENGINEERING, -1, -1);
+	_tmp47_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
+	g_object_ref_sink (_tmp47_);
+	renderer = _tmp47_;
 	_tmp48_ = self->priv->number_format_combo;
 	_tmp49_ = renderer;
-	gtk_cell_layout_add_attribute ((GtkCellLayout*) _tmp48_, (GtkCellRenderer*) _tmp49_, "text", 0);
-	_tmp50_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 6);
-	g_object_ref_sink (_tmp50_);
-	format_options_box = _tmp50_;
-	_tmp51_ = format_options_box;
-	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp51_, 6);
-	_tmp52_ = format_options_box;
-	gtk_widget_set_margin_start ((GtkWidget*) _tmp52_, 12);
+	gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp48_, (GtkCellRenderer*) _tmp49_, TRUE);
+	_tmp50_ = self->priv->number_format_combo;
+	_tmp51_ = renderer;
+	gtk_cell_layout_add_attribute ((GtkCellLayout*) _tmp50_, (GtkCellRenderer*) _tmp51_, "text", 0);
+	_tmp52_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 6);
+	g_object_ref_sink (_tmp52_);
+	format_options_box = _tmp52_;
 	_tmp53_ = format_options_box;
-	gtk_widget_set_halign ((GtkWidget*) _tmp53_, GTK_ALIGN_CENTER);
+	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp53_, 6);
 	_tmp54_ = format_options_box;
-	gtk_widget_set_valign ((GtkWidget*) _tmp54_, GTK_ALIGN_CENTER);
+	gtk_widget_set_margin_start ((GtkWidget*) _tmp54_, 12);
 	_tmp55_ = format_options_box;
-	gtk_widget_show ((GtkWidget*) _tmp55_);
-	_tmp56_ = grid;
+	gtk_widget_set_halign ((GtkWidget*) _tmp55_, GTK_ALIGN_CENTER);
+	_tmp56_ = format_options_box;
+	gtk_widget_set_valign ((GtkWidget*) _tmp56_, GTK_ALIGN_CENTER);
 	_tmp57_ = format_options_box;
-	gtk_grid_attach (_tmp56_, (GtkWidget*) _tmp57_, 0, 1, 2, 1);
-	_tmp58_ = gtk_adjustment_new (0.0, 0.0, 100.0, 1.0, 1.0, 0.0);
-	g_object_ref_sink (_tmp58_);
-	decimal_places_adjustment = _tmp58_;
-	_tmp59_ = decimal_places_adjustment;
-	_tmp60_ = (GtkSpinButton*) gtk_spin_button_new (_tmp59_, 0.0, (guint) 0);
+	gtk_widget_show ((GtkWidget*) _tmp57_);
+	_tmp58_ = grid;
+	_tmp59_ = format_options_box;
+	gtk_grid_attach (_tmp58_, (GtkWidget*) _tmp59_, 0, 1, 2, 1);
+	_tmp60_ = gtk_adjustment_new (0.0, 0.0, 100.0, 1.0, 1.0, 0.0);
 	g_object_ref_sink (_tmp60_);
-	_g_object_unref0 (self->priv->decimal_places_spin);
-	self->priv->decimal_places_spin = _tmp60_;
-	_tmp61_ = _ ("Number of _decimals");
-	_tmp62_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp61_);
+	decimal_places_adjustment = _tmp60_;
+	_tmp61_ = decimal_places_adjustment;
+	_tmp62_ = (GtkSpinButton*) gtk_spin_button_new (_tmp61_, 0.0, (guint) 0);
 	g_object_ref_sink (_tmp62_);
+	_g_object_unref0 (self->priv->decimal_places_spin);
+	self->priv->decimal_places_spin = _tmp62_;
+	_tmp63_ = _ ("Number of _decimals");
+	_tmp64_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp63_);
+	g_object_ref_sink (_tmp64_);
 	_g_object_unref0 (label);
-	label = _tmp62_;
-	_tmp63_ = label;
-	_tmp64_ = self->priv->decimal_places_spin;
-	gtk_label_set_mnemonic_widget (_tmp63_, (GtkWidget*) _tmp64_);
+	label = _tmp64_;
 	_tmp65_ = label;
-	gtk_widget_show ((GtkWidget*) _tmp65_);
-	_tmp66_ = label;
-	gtk_label_set_xalign (_tmp66_, (gfloat) 0);
-	_tmp67_ = grid;
+	_tmp66_ = self->priv->decimal_places_spin;
+	gtk_label_set_mnemonic_widget (_tmp65_, (GtkWidget*) _tmp66_);
+	_tmp67_ = label;
+	gtk_widget_show ((GtkWidget*) _tmp67_);
 	_tmp68_ = label;
-	gtk_grid_attach (_tmp67_, (GtkWidget*) _tmp68_, 0, 2, 1, 1);
-	_tmp69_ = self->priv->decimal_places_spin;
-	gtk_widget_show ((GtkWidget*) _tmp69_);
-	_tmp70_ = self->priv->decimal_places_spin;
-	g_signal_connect_object (_tmp70_, "value-changed", (GCallback) __math_preferences_dialog___lambda25__gtk_spin_button_value_changed, self, 0);
-	_tmp71_ = grid;
+	gtk_label_set_xalign (_tmp68_, (gfloat) 0);
+	_tmp69_ = grid;
+	_tmp70_ = label;
+	gtk_grid_attach (_tmp69_, (GtkWidget*) _tmp70_, 0, 2, 1, 1);
+	_tmp71_ = self->priv->decimal_places_spin;
+	gtk_widget_show ((GtkWidget*) _tmp71_);
 	_tmp72_ = self->priv->decimal_places_spin;
-	gtk_grid_attach (_tmp71_, (GtkWidget*) _tmp72_, 1, 2, 1, 1);
-	_tmp73_ = _ ("Trailing _zeroes");
-	_tmp74_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp73_);
-	g_object_ref_sink (_tmp74_);
+	g_signal_connect_object (_tmp72_, "value-changed", (GCallback) __math_preferences_dialog___lambda25__gtk_spin_button_value_changed, self, 0);
+	_tmp73_ = grid;
+	_tmp74_ = self->priv->decimal_places_spin;
+	gtk_grid_attach (_tmp73_, (GtkWidget*) _tmp74_, 1, 2, 1, 1);
+	_tmp75_ = _ ("Trailing _zeroes");
+	_tmp76_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp75_);
+	g_object_ref_sink (_tmp76_);
 	_g_object_unref0 (label);
-	label = _tmp74_;
-	_tmp75_ = label;
-	gtk_label_set_xalign (_tmp75_, (gfloat) 0);
-	_tmp76_ = label;
-	gtk_widget_show ((GtkWidget*) _tmp76_);
-	_tmp77_ = grid;
+	label = _tmp76_;
+	_tmp77_ = label;
+	gtk_label_set_xalign (_tmp77_, (gfloat) 0);
 	_tmp78_ = label;
-	gtk_grid_attach (_tmp77_, (GtkWidget*) _tmp78_, 0, 3, 1, 1);
-	_tmp79_ = label;
-	_tmp80_ = self->priv->trailing_zeroes_switch;
-	gtk_label_set_mnemonic_widget (_tmp79_, (GtkWidget*) _tmp80_);
-	_tmp81_ = (GtkSwitch*) gtk_switch_new ();
-	g_object_ref_sink (_tmp81_);
-	_g_object_unref0 (self->priv->trailing_zeroes_switch);
-	self->priv->trailing_zeroes_switch = _tmp81_;
+	gtk_widget_show ((GtkWidget*) _tmp78_);
+	_tmp79_ = grid;
+	_tmp80_ = label;
+	gtk_grid_attach (_tmp79_, (GtkWidget*) _tmp80_, 0, 3, 1, 1);
+	_tmp81_ = label;
 	_tmp82_ = self->priv->trailing_zeroes_switch;
-	gtk_widget_show ((GtkWidget*) _tmp82_);
-	_tmp83_ = self->priv->trailing_zeroes_switch;
-	g_signal_connect_object (_tmp83_, "state-set", (GCallback) __math_preferences_dialog___lambda26__gtk_switch_state_set, self, 0);
+	gtk_label_set_mnemonic_widget (_tmp81_, (GtkWidget*) _tmp82_);
+	_tmp83_ = (GtkSwitch*) gtk_switch_new ();
+	g_object_ref_sink (_tmp83_);
+	_g_object_unref0 (self->priv->trailing_zeroes_switch);
+	self->priv->trailing_zeroes_switch = _tmp83_;
 	_tmp84_ = self->priv->trailing_zeroes_switch;
-	gtk_widget_set_halign ((GtkWidget*) _tmp84_, GTK_ALIGN_END);
-	_tmp85_ = grid;
+	gtk_widget_show ((GtkWidget*) _tmp84_);
+	_tmp85_ = self->priv->trailing_zeroes_switch;
+	g_signal_connect_object (_tmp85_, "state-set", (GCallback) __math_preferences_dialog___lambda26__gtk_switch_state_set, self, 0);
 	_tmp86_ = self->priv->trailing_zeroes_switch;
-	gtk_grid_attach (_tmp85_, (GtkWidget*) _tmp86_, 1, 3, 1, 1);
-	_tmp87_ = _ ("_Thousands separators");
-	_tmp88_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp87_);
-	g_object_ref_sink (_tmp88_);
+	gtk_widget_set_halign ((GtkWidget*) _tmp86_, GTK_ALIGN_END);
+	_tmp87_ = grid;
+	_tmp88_ = self->priv->trailing_zeroes_switch;
+	gtk_grid_attach (_tmp87_, (GtkWidget*) _tmp88_, 1, 3, 1, 1);
+	_tmp89_ = _ ("_Thousands separators");
+	_tmp90_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp89_);
+	g_object_ref_sink (_tmp90_);
 	_g_object_unref0 (label);
-	label = _tmp88_;
-	_tmp89_ = label;
-	gtk_label_set_xalign (_tmp89_, (gfloat) 0);
-	_tmp90_ = label;
-	gtk_widget_show ((GtkWidget*) _tmp90_);
+	label = _tmp90_;
 	_tmp91_ = label;
-	_tmp92_ = self->priv->thousands_separator_switch;
-	gtk_label_set_mnemonic_widget (_tmp91_, (GtkWidget*) _tmp92_);
-	_tmp93_ = grid;
-	_tmp94_ = label;
-	gtk_grid_attach (_tmp93_, (GtkWidget*) _tmp94_, 0, 4, 1, 1);
-	_tmp95_ = (GtkSwitch*) gtk_switch_new ();
-	g_object_ref_sink (_tmp95_);
+	gtk_label_set_xalign (_tmp91_, (gfloat) 0);
+	_tmp92_ = label;
+	gtk_widget_show ((GtkWidget*) _tmp92_);
+	_tmp93_ = label;
+	_tmp94_ = self->priv->thousands_separator_switch;
+	gtk_label_set_mnemonic_widget (_tmp93_, (GtkWidget*) _tmp94_);
+	_tmp95_ = grid;
+	_tmp96_ = label;
+	gtk_grid_attach (_tmp95_, (GtkWidget*) _tmp96_, 0, 4, 1, 1);
+	_tmp97_ = (GtkSwitch*) gtk_switch_new ();
+	g_object_ref_sink (_tmp97_);
 	_g_object_unref0 (self->priv->thousands_separator_switch);
-	self->priv->thousands_separator_switch = _tmp95_;
-	_tmp96_ = self->priv->thousands_separator_switch;
-	gtk_widget_show ((GtkWidget*) _tmp96_);
-	_tmp97_ = self->priv->thousands_separator_switch;
-	g_signal_connect_object (_tmp97_, "state-set", (GCallback) __math_preferences_dialog___lambda27__gtk_switch_state_set, self, 0);
+	self->priv->thousands_separator_switch = _tmp97_;
 	_tmp98_ = self->priv->thousands_separator_switch;
-	gtk_widget_set_halign ((GtkWidget*) _tmp98_, GTK_ALIGN_END);
-	_tmp99_ = grid;
+	gtk_widget_show ((GtkWidget*) _tmp98_);
+	_tmp99_ = self->priv->thousands_separator_switch;
+	g_signal_connect_object (_tmp99_, "state-set", (GCallback) __math_preferences_dialog___lambda27__gtk_switch_state_set, self, 0);
 	_tmp100_ = self->priv->thousands_separator_switch;
-	gtk_grid_attach (_tmp99_, (GtkWidget*) _tmp100_, 1, 4, 1, 1);
-	_tmp101_ = _ ("_Angle units:");
-	_tmp102_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp101_);
-	g_object_ref_sink (_tmp102_);
+	gtk_widget_set_halign ((GtkWidget*) _tmp100_, GTK_ALIGN_END);
+	_tmp101_ = grid;
+	_tmp102_ = self->priv->thousands_separator_switch;
+	gtk_grid_attach (_tmp101_, (GtkWidget*) _tmp102_, 1, 4, 1, 1);
+	_tmp103_ = _ ("_Angle units:");
+	_tmp104_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp103_);
+	g_object_ref_sink (_tmp104_);
 	_g_object_unref0 (label);
-	label = _tmp102_;
-	_tmp103_ = label;
-	gtk_widget_show ((GtkWidget*) _tmp103_);
-	_tmp104_ = label;
-	gtk_label_set_xalign (_tmp104_, (gfloat) 0);
-	_tmp105_ = grid;
+	label = _tmp104_;
+	_tmp105_ = label;
+	gtk_widget_show ((GtkWidget*) _tmp105_);
 	_tmp106_ = label;
-	gtk_grid_attach (_tmp105_, (GtkWidget*) _tmp106_, 0, 5, 1, 1);
-	_tmp107_ = (GtkComboBox*) gtk_combo_box_new ();
-	g_object_ref_sink (_tmp107_);
-	_g_object_unref0 (self->priv->angle_unit_combo);
-	self->priv->angle_unit_combo = _tmp107_;
+	gtk_label_set_xalign (_tmp106_, (gfloat) 0);
+	_tmp107_ = grid;
 	_tmp108_ = label;
-	_tmp109_ = self->priv->angle_unit_combo;
-	gtk_label_set_mnemonic_widget (_tmp108_, (GtkWidget*) _tmp109_);
-	_tmp110_ = self->priv->angle_unit_combo;
-	gtk_widget_show ((GtkWidget*) _tmp110_);
+	gtk_grid_attach (_tmp107_, (GtkWidget*) _tmp108_, 0, 5, 1, 1);
+	_tmp109_ = (GtkComboBox*) gtk_combo_box_new ();
+	g_object_ref_sink (_tmp109_);
+	_g_object_unref0 (self->priv->angle_unit_combo);
+	self->priv->angle_unit_combo = _tmp109_;
+	_tmp110_ = label;
 	_tmp111_ = self->priv->angle_unit_combo;
-	g_signal_connect_object (_tmp111_, "changed", (GCallback) _math_preferences_dialog_angle_unit_combo_changed_cb_gtk_combo_box_changed, self, 0);
-	_tmp112_ = grid;
+	gtk_label_set_mnemonic_widget (_tmp110_, (GtkWidget*) _tmp111_);
+	_tmp112_ = self->priv->angle_unit_combo;
+	gtk_widget_show ((GtkWidget*) _tmp112_);
 	_tmp113_ = self->priv->angle_unit_combo;
-	gtk_grid_attach (_tmp112_, (GtkWidget*) _tmp113_, 1, 5, 1, 1);
-	_tmp114_ = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_INT, -1);
-	_g_object_unref0 (model);
-	model = _tmp114_;
+	g_signal_connect_object (_tmp113_, "changed", (GCallback) _math_preferences_dialog_angle_unit_combo_changed_cb_gtk_combo_box_changed, self, 0);
+	_tmp114_ = grid;
 	_tmp115_ = self->priv->angle_unit_combo;
-	_tmp116_ = model;
-	gtk_combo_box_set_model (_tmp115_, (GtkTreeModel*) _tmp116_);
-	_tmp117_ = model;
-	gtk_list_store_append (_tmp117_, &_tmp118_);
-	iter = _tmp118_;
+	gtk_grid_attach (_tmp114_, (GtkWidget*) _tmp115_, 1, 5, 1, 1);
+	_tmp116_ = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_INT, -1);
+	_g_object_unref0 (model);
+	model = _tmp116_;
+	_tmp117_ = self->priv->angle_unit_combo;
+	_tmp118_ = model;
+	gtk_combo_box_set_model (_tmp117_, (GtkTreeModel*) _tmp118_);
 	_tmp119_ = model;
-	_tmp120_ = iter;
-	_tmp121_ = _ ("Degrees");
-	gtk_list_store_set (_tmp119_, &_tmp120_, 0, _tmp121_, 1, ANGLE_UNIT_DEGREES, -1, -1);
-	_tmp122_ = model;
-	gtk_list_store_append (_tmp122_, &_tmp123_);
-	iter = _tmp123_;
+	gtk_list_store_append (_tmp119_, &_tmp120_);
+	iter = _tmp120_;
+	_tmp121_ = model;
+	_tmp122_ = iter;
+	_tmp123_ = _ ("Degrees");
+	gtk_list_store_set (_tmp121_, &_tmp122_, 0, _tmp123_, 1, ANGLE_UNIT_DEGREES, -1, -1);
 	_tmp124_ = model;
-	_tmp125_ = iter;
-	_tmp126_ = _ ("Radians");
-	gtk_list_store_set (_tmp124_, &_tmp125_, 0, _tmp126_, 1, ANGLE_UNIT_RADIANS, -1, -1);
-	_tmp127_ = model;
-	gtk_list_store_append (_tmp127_, &_tmp128_);
-	iter = _tmp128_;
+	gtk_list_store_append (_tmp124_, &_tmp125_);
+	iter = _tmp125_;
+	_tmp126_ = model;
+	_tmp127_ = iter;
+	_tmp128_ = _ ("Radians");
+	gtk_list_store_set (_tmp126_, &_tmp127_, 0, _tmp128_, 1, ANGLE_UNIT_RADIANS, -1, -1);
 	_tmp129_ = model;
-	_tmp130_ = iter;
-	_tmp131_ = _ ("Gradians");
-	gtk_list_store_set (_tmp129_, &_tmp130_, 0, _tmp131_, 1, ANGLE_UNIT_GRADIANS, -1, -1);
-	_tmp132_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
-	g_object_ref_sink (_tmp132_);
+	gtk_list_store_append (_tmp129_, &_tmp130_);
+	iter = _tmp130_;
+	_tmp131_ = model;
+	_tmp132_ = iter;
+	_tmp133_ = _ ("Gradians");
+	gtk_list_store_set (_tmp131_, &_tmp132_, 0, _tmp133_, 1, ANGLE_UNIT_GRADIANS, -1, -1);
+	_tmp134_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
+	g_object_ref_sink (_tmp134_);
 	_g_object_unref0 (renderer);
-	renderer = _tmp132_;
-	_tmp133_ = self->priv->angle_unit_combo;
-	_tmp134_ = renderer;
-	gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp133_, (GtkCellRenderer*) _tmp134_, TRUE);
+	renderer = _tmp134_;
 	_tmp135_ = self->priv->angle_unit_combo;
 	_tmp136_ = renderer;
-	gtk_cell_layout_add_attribute ((GtkCellLayout*) _tmp135_, (GtkCellRenderer*) _tmp136_, "text", 0);
-	_tmp137_ = _ ("Word _size:");
-	_tmp138_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp137_);
-	g_object_ref_sink (_tmp138_);
+	gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp135_, (GtkCellRenderer*) _tmp136_, TRUE);
+	_tmp137_ = self->priv->angle_unit_combo;
+	_tmp138_ = renderer;
+	gtk_cell_layout_add_attribute ((GtkCellLayout*) _tmp137_, (GtkCellRenderer*) _tmp138_, "text", 0);
+	_tmp139_ = _ ("Word _size:");
+	_tmp140_ = (GtkLabel*) gtk_label_new_with_mnemonic (_tmp139_);
+	g_object_ref_sink (_tmp140_);
 	_g_object_unref0 (label);
-	label = _tmp138_;
-	_tmp139_ = label;
-	gtk_widget_show ((GtkWidget*) _tmp139_);
-	_tmp140_ = label;
-	gtk_label_set_xalign (_tmp140_, (gfloat) 0);
-	_tmp141_ = grid;
+	label = _tmp140_;
+	_tmp141_ = label;
+	gtk_widget_show ((GtkWidget*) _tmp141_);
 	_tmp142_ = label;
-	gtk_grid_attach (_tmp141_, (GtkWidget*) _tmp142_, 0, 6, 1, 1);
-	_tmp143_ = (GtkComboBox*) gtk_combo_box_new ();
-	g_object_ref_sink (_tmp143_);
-	_g_object_unref0 (self->priv->word_size_combo);
-	self->priv->word_size_combo = _tmp143_;
+	gtk_label_set_xalign (_tmp142_, (gfloat) 0);
+	_tmp143_ = grid;
 	_tmp144_ = label;
-	_tmp145_ = self->priv->word_size_combo;
-	gtk_label_set_mnemonic_widget (_tmp144_, (GtkWidget*) _tmp145_);
-	_tmp146_ = self->priv->word_size_combo;
-	gtk_widget_show ((GtkWidget*) _tmp146_);
+	gtk_grid_attach (_tmp143_, (GtkWidget*) _tmp144_, 0, 6, 1, 1);
+	_tmp145_ = (GtkComboBox*) gtk_combo_box_new ();
+	g_object_ref_sink (_tmp145_);
+	_g_object_unref0 (self->priv->word_size_combo);
+	self->priv->word_size_combo = _tmp145_;
+	_tmp146_ = label;
 	_tmp147_ = self->priv->word_size_combo;
-	g_signal_connect_object (_tmp147_, "changed", (GCallback) _math_preferences_dialog_word_size_combo_changed_cb_gtk_combo_box_changed, self, 0);
-	_tmp148_ = grid;
+	gtk_label_set_mnemonic_widget (_tmp146_, (GtkWidget*) _tmp147_);
+	_tmp148_ = self->priv->word_size_combo;
+	gtk_widget_show ((GtkWidget*) _tmp148_);
 	_tmp149_ = self->priv->word_size_combo;
-	gtk_grid_attach (_tmp148_, (GtkWidget*) _tmp149_, 1, 6, 1, 1);
-	_tmp150_ = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_INT, -1);
-	_g_object_unref0 (model);
-	model = _tmp150_;
+	g_signal_connect_object (_tmp149_, "changed", (GCallback) _math_preferences_dialog_word_size_combo_changed_cb_gtk_combo_box_changed, self, 0);
+	_tmp150_ = grid;
 	_tmp151_ = self->priv->word_size_combo;
-	_tmp152_ = model;
-	gtk_combo_box_set_model (_tmp151_, (GtkTreeModel*) _tmp152_);
-	_tmp153_ = model;
-	gtk_list_store_append (_tmp153_, &_tmp154_);
-	iter = _tmp154_;
+	gtk_grid_attach (_tmp150_, (GtkWidget*) _tmp151_, 1, 6, 1, 1);
+	_tmp152_ = gtk_list_store_new (2, G_TYPE_STRING, G_TYPE_INT, -1);
+	_g_object_unref0 (model);
+	model = _tmp152_;
+	_tmp153_ = self->priv->word_size_combo;
+	_tmp154_ = model;
+	gtk_combo_box_set_model (_tmp153_, (GtkTreeModel*) _tmp154_);
 	_tmp155_ = model;
-	_tmp156_ = iter;
-	_tmp157_ = _ ("8 bits");
-	gtk_list_store_set (_tmp155_, &_tmp156_, 0, _tmp157_, 1, 8, -1);
-	_tmp158_ = model;
-	gtk_list_store_append (_tmp158_, &_tmp159_);
-	iter = _tmp159_;
+	gtk_list_store_append (_tmp155_, &_tmp156_);
+	iter = _tmp156_;
+	_tmp157_ = model;
+	_tmp158_ = iter;
+	_tmp159_ = _ ("8 bits");
+	gtk_list_store_set (_tmp157_, &_tmp158_, 0, _tmp159_, 1, 8, -1);
 	_tmp160_ = model;
-	_tmp161_ = iter;
-	_tmp162_ = _ ("16 bits");
-	gtk_list_store_set (_tmp160_, &_tmp161_, 0, _tmp162_, 1, 16, -1);
-	_tmp163_ = model;
-	gtk_list_store_append (_tmp163_, &_tmp164_);
-	iter = _tmp164_;
+	gtk_list_store_append (_tmp160_, &_tmp161_);
+	iter = _tmp161_;
+	_tmp162_ = model;
+	_tmp163_ = iter;
+	_tmp164_ = _ ("16 bits");
+	gtk_list_store_set (_tmp162_, &_tmp163_, 0, _tmp164_, 1, 16, -1);
 	_tmp165_ = model;
-	_tmp166_ = iter;
-	_tmp167_ = _ ("32 bits");
-	gtk_list_store_set (_tmp165_, &_tmp166_, 0, _tmp167_, 1, 32, -1);
-	_tmp168_ = model;
-	gtk_list_store_append (_tmp168_, &_tmp169_);
-	iter = _tmp169_;
+	gtk_list_store_append (_tmp165_, &_tmp166_);
+	iter = _tmp166_;
+	_tmp167_ = model;
+	_tmp168_ = iter;
+	_tmp169_ = _ ("32 bits");
+	gtk_list_store_set (_tmp167_, &_tmp168_, 0, _tmp169_, 1, 32, -1);
 	_tmp170_ = model;
-	_tmp171_ = iter;
-	_tmp172_ = _ ("64 bits");
-	gtk_list_store_set (_tmp170_, &_tmp171_, 0, _tmp172_, 1, 64, -1);
-	_tmp173_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
-	g_object_ref_sink (_tmp173_);
+	gtk_list_store_append (_tmp170_, &_tmp171_);
+	iter = _tmp171_;
+	_tmp172_ = model;
+	_tmp173_ = iter;
+	_tmp174_ = _ ("64 bits");
+	gtk_list_store_set (_tmp172_, &_tmp173_, 0, _tmp174_, 1, 64, -1);
+	_tmp175_ = (GtkCellRendererText*) gtk_cell_renderer_text_new ();
+	g_object_ref_sink (_tmp175_);
 	_g_object_unref0 (renderer);
-	renderer = _tmp173_;
-	_tmp174_ = self->priv->word_size_combo;
-	_tmp175_ = renderer;
-	gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp174_, (GtkCellRenderer*) _tmp175_, TRUE);
+	renderer = _tmp175_;
 	_tmp176_ = self->priv->word_size_combo;
 	_tmp177_ = renderer;
-	gtk_cell_layout_add_attribute ((GtkCellLayout*) _tmp176_, (GtkCellRenderer*) _tmp177_, "text", 0);
-	_tmp178_ = self->priv->decimal_places_spin;
-	_tmp179_ = self->priv->_equation;
-	_tmp180_ = math_equation_get_accuracy (_tmp179_);
-	_tmp181_ = _tmp180_;
-	gtk_spin_button_set_value (_tmp178_, (gdouble) _tmp181_);
-	_tmp182_ = self->priv->_equation;
-	g_signal_connect_object ((GObject*) _tmp182_, "notify::accuracy", (GCallback) __math_preferences_dialog___lambda28__g_object_notify, self, 0);
-	_tmp183_ = self->priv->thousands_separator_switch;
+	gtk_cell_layout_pack_start ((GtkCellLayout*) _tmp176_, (GtkCellRenderer*) _tmp177_, TRUE);
+	_tmp178_ = self->priv->word_size_combo;
+	_tmp179_ = renderer;
+	gtk_cell_layout_add_attribute ((GtkCellLayout*) _tmp178_, (GtkCellRenderer*) _tmp179_, "text", 0);
+	_tmp180_ = self->priv->decimal_places_spin;
+	_tmp181_ = self->priv->_equation;
+	_tmp182_ = math_equation_get_accuracy (_tmp181_);
+	_tmp183_ = _tmp182_;
+	gtk_spin_button_set_value (_tmp180_, (gdouble) _tmp183_);
 	_tmp184_ = self->priv->_equation;
-	_tmp185_ = math_equation_get_show_thousands_separators (_tmp184_);
-	_tmp186_ = _tmp185_;
-	gtk_switch_set_active (_tmp183_, _tmp186_);
-	_tmp187_ = self->priv->_equation;
-	g_signal_connect_object ((GObject*) _tmp187_, "notify::show-thousands-separators", (GCallback) __math_preferences_dialog___lambda29__g_object_notify, self, 0);
-	_tmp188_ = self->priv->trailing_zeroes_switch;
+	g_signal_connect_object ((GObject*) _tmp184_, "notify::accuracy", (GCallback) __math_preferences_dialog___lambda28__g_object_notify, self, 0);
+	_tmp185_ = self->priv->thousands_separator_switch;
+	_tmp186_ = self->priv->_equation;
+	_tmp187_ = math_equation_get_show_thousands_separators (_tmp186_);
+	_tmp188_ = _tmp187_;
+	gtk_switch_set_active (_tmp185_, _tmp188_);
 	_tmp189_ = self->priv->_equation;
-	_tmp190_ = math_equation_get_show_trailing_zeroes (_tmp189_);
-	_tmp191_ = _tmp190_;
-	gtk_switch_set_active (_tmp188_, _tmp191_);
-	_tmp192_ = self->priv->_equation;
-	g_signal_connect_object ((GObject*) _tmp192_, "notify::show-trailing_zeroes", (GCallback) __math_preferences_dialog___lambda30__g_object_notify, self, 0);
-	_tmp193_ = self->priv->number_format_combo;
+	g_signal_connect_object ((GObject*) _tmp189_, "notify::show-thousands-separators", (GCallback) __math_preferences_dialog___lambda29__g_object_notify, self, 0);
+	_tmp190_ = self->priv->trailing_zeroes_switch;
+	_tmp191_ = self->priv->_equation;
+	_tmp192_ = math_equation_get_show_trailing_zeroes (_tmp191_);
+	_tmp193_ = _tmp192_;
+	gtk_switch_set_active (_tmp190_, _tmp193_);
 	_tmp194_ = self->priv->_equation;
-	_tmp195_ = math_equation_get_number_format (_tmp194_);
-	_tmp196_ = _tmp195_;
-	math_preferences_dialog_set_combo_box_from_int (self, _tmp193_, (gint) _tmp196_);
-	_tmp197_ = self->priv->_equation;
-	g_signal_connect_object ((GObject*) _tmp197_, "notify::number-format", (GCallback) __math_preferences_dialog___lambda31__g_object_notify, self, 0);
-	_tmp198_ = self->priv->word_size_combo;
+	g_signal_connect_object ((GObject*) _tmp194_, "notify::show-trailing_zeroes", (GCallback) __math_preferences_dialog___lambda30__g_object_notify, self, 0);
+	_tmp195_ = self->priv->number_format_combo;
+	_tmp196_ = self->priv->_equation;
+	_tmp197_ = math_equation_get_number_format (_tmp196_);
+	_tmp198_ = _tmp197_;
+	math_preferences_dialog_set_combo_box_from_int (self, _tmp195_, (gint) _tmp198_);
 	_tmp199_ = self->priv->_equation;
-	_tmp200_ = math_equation_get_word_size (_tmp199_);
-	_tmp201_ = _tmp200_;
-	math_preferences_dialog_set_combo_box_from_int (self, _tmp198_, _tmp201_);
-	_tmp202_ = self->priv->_equation;
-	g_signal_connect_object ((GObject*) _tmp202_, "notify::word-size", (GCallback) __math_preferences_dialog___lambda32__g_object_notify, self, 0);
-	_tmp203_ = self->priv->angle_unit_combo;
+	g_signal_connect_object ((GObject*) _tmp199_, "notify::number-format", (GCallback) __math_preferences_dialog___lambda31__g_object_notify, self, 0);
+	_tmp200_ = self->priv->word_size_combo;
+	_tmp201_ = self->priv->_equation;
+	_tmp202_ = math_equation_get_word_size (_tmp201_);
+	_tmp203_ = _tmp202_;
+	math_preferences_dialog_set_combo_box_from_int (self, _tmp200_, _tmp203_);
 	_tmp204_ = self->priv->_equation;
-	_tmp205_ = math_equation_get_angle_units (_tmp204_);
-	_tmp206_ = _tmp205_;
-	math_preferences_dialog_set_combo_box_from_int (self, _tmp203_, (gint) _tmp206_);
-	_tmp207_ = self->priv->_equation;
-	g_signal_connect_object ((GObject*) _tmp207_, "notify::angle-units", (GCallback) __math_preferences_dialog___lambda33__g_object_notify, self, 0);
+	g_signal_connect_object ((GObject*) _tmp204_, "notify::word-size", (GCallback) __math_preferences_dialog___lambda32__g_object_notify, self, 0);
+	_tmp205_ = self->priv->angle_unit_combo;
+	_tmp206_ = self->priv->_equation;
+	_tmp207_ = math_equation_get_angle_units (_tmp206_);
+	_tmp208_ = _tmp207_;
+	math_preferences_dialog_set_combo_box_from_int (self, _tmp205_, (gint) _tmp208_);
+	_tmp209_ = self->priv->_equation;
+	g_signal_connect_object ((GObject*) _tmp209_, "notify::angle-units", (GCallback) __math_preferences_dialog___lambda33__g_object_notify, self, 0);
 	_g_object_unref0 (decimal_places_adjustment);
 	_g_object_unref0 (format_options_box);
 	_g_object_unref0 (renderer);
diff --git a/src/math-preferences.vala b/src/math-preferences.vala
index d1ab765..17b2d6f 100644
--- a/src/math-preferences.vala
+++ b/src/math-preferences.vala
@@ -21,7 +21,7 @@ public class MathPreferencesDialog : Gtk.Dialog
 
     public MathPreferencesDialog (MathEquation eq)
     {
-        Object(use_header_bar: 1, equation: eq, resizable: false);
+        Object(use_header_bar: is_desktop ("Unity") ? 0 : 1, equation: eq, resizable: false);
     }
 
     construct
@@ -30,7 +30,11 @@ public class MathPreferencesDialog : Gtk.Dialog
                    _("Preferences"));
         border_width = 8;
 
-        ((Gtk.HeaderBar) get_header_bar ()).show_close_button = true;
+        if (is_desktop ("Unity"))
+            add_button (/* Label on close button in preferences dialog */
+                        _("_Close"), 0);
+        else
+            ((Gtk.HeaderBar) get_header_bar ()).show_close_button = true;
 
         var grid = new Gtk.Grid ();
         grid.show ();
diff --git a/src/math-window.c b/src/math-window.c
index 743018e..c756008 100644
--- a/src/math-window.c
+++ b/src/math-window.c
@@ -133,6 +133,7 @@ MathWindow* math_window_construct (GType object_type, GtkApplication* app, MathE
 void math_converter_set_equation (MathConverter* self, MathEquation* equation);
 void math_converter_set_category (MathConverter* self, const gchar* category);
 void math_converter_set_conversion (MathConverter* self, const gchar* unit_a, const gchar* unit_b);
+gboolean is_desktop (const gchar* name);
 MathDisplay* math_display_new (MathEquation* equation);
 MathDisplay* math_display_construct (GType object_type, MathEquation* equation);
 void math_display_grabfocus (MathDisplay* self);
@@ -215,24 +216,25 @@ MathWindow* math_window_construct (GType object_type, GtkApplication* app, MathE
 	gchar* _tmp12_ = NULL;
 	gchar* _tmp13_ = NULL;
 	gchar* _tmp14_ = NULL;
-	MathEquation* _tmp15_ = NULL;
-	MathDisplay* _tmp16_ = NULL;
-	GtkGrid* _tmp17_ = NULL;
-	MathDisplay* _tmp18_ = NULL;
-	MathDisplay* _tmp19_ = NULL;
-	MathDisplay* _tmp20_ = NULL;
-	MathEquation* _tmp21_ = NULL;
-	MathButtons* _tmp22_ = NULL;
-	GtkGrid* _tmp23_ = NULL;
-	MathButtons* _tmp24_ = NULL;
-	gboolean _tmp25_ = FALSE;
-	MathButtons* _tmp26_ = NULL;
-	ButtonMode _tmp27_ = 0;
-	ButtonMode _tmp28_ = 0;
-	MathButtons* _tmp29_ = NULL;
+	gboolean _tmp15_ = FALSE;
+	MathEquation* _tmp52_ = NULL;
+	MathDisplay* _tmp53_ = NULL;
+	GtkGrid* _tmp54_ = NULL;
+	MathDisplay* _tmp55_ = NULL;
+	MathDisplay* _tmp56_ = NULL;
+	MathDisplay* _tmp57_ = NULL;
+	MathEquation* _tmp58_ = NULL;
+	MathButtons* _tmp59_ = NULL;
+	GtkGrid* _tmp60_ = NULL;
+	MathButtons* _tmp61_ = NULL;
+	gboolean _tmp62_ = FALSE;
+	MathButtons* _tmp63_ = NULL;
+	ButtonMode _tmp64_ = 0;
+	ButtonMode _tmp65_ = 0;
+	MathButtons* _tmp66_ = NULL;
 	GtkCssProvider* provider = NULL;
-	GtkCssProvider* _tmp30_ = NULL;
-	GdkScreen* _tmp31_ = NULL;
+	GtkCssProvider* _tmp67_ = NULL;
+	GdkScreen* _tmp68_ = NULL;
 	g_return_val_if_fail (app != NULL, NULL);
 	g_return_val_if_fail (equation != NULL, NULL);
 	_tmp0_ = app;
@@ -260,43 +262,154 @@ MathWindow* math_window_construct (GType object_type, GtkApplication* app, MathE
 	math_converter_set_conversion (_tmp6_, _tmp10_, _tmp14_);
 	_g_free0 (_tmp14_);
 	_g_free0 (_tmp10_);
-	_tmp15_ = equation;
-	_tmp16_ = math_display_new (_tmp15_);
-	g_object_ref_sink (_tmp16_);
+	_tmp15_ = is_desktop ("Unity");
+	if (_tmp15_) {
+		GMenu* menu = NULL;
+		GMenu* _tmp16_ = NULL;
+		GMenu* section = NULL;
+		GMenu* _tmp17_ = NULL;
+		GMenu* _tmp18_ = NULL;
+		const gchar* _tmp19_ = NULL;
+		GMenu* _tmp20_ = NULL;
+		GMenuItem* item = NULL;
+		const gchar* _tmp21_ = NULL;
+		GMenuItem* _tmp22_ = NULL;
+		GMenuItem* _tmp23_ = NULL;
+		GMenu* _tmp24_ = NULL;
+		GMenuItem* _tmp25_ = NULL;
+		const gchar* _tmp26_ = NULL;
+		GMenuItem* _tmp27_ = NULL;
+		GMenuItem* _tmp28_ = NULL;
+		GMenu* _tmp29_ = NULL;
+		GMenuItem* _tmp30_ = NULL;
+		const gchar* _tmp31_ = NULL;
+		GMenuItem* _tmp32_ = NULL;
+		GMenuItem* _tmp33_ = NULL;
+		GMenu* _tmp34_ = NULL;
+		GMenuItem* _tmp35_ = NULL;
+		const gchar* _tmp36_ = NULL;
+		GMenuItem* _tmp37_ = NULL;
+		GMenuItem* _tmp38_ = NULL;
+		GMenu* _tmp39_ = NULL;
+		GMenuItem* _tmp40_ = NULL;
+		const gchar* _tmp41_ = NULL;
+		GMenuItem* _tmp42_ = NULL;
+		GMenuItem* _tmp43_ = NULL;
+		GMenu* _tmp44_ = NULL;
+		GMenuItem* _tmp45_ = NULL;
+		GtkMenuBar* menubar = NULL;
+		GMenu* _tmp46_ = NULL;
+		GtkMenuBar* _tmp47_ = NULL;
+		GtkMenuBar* _tmp48_ = NULL;
+		GtkGrid* _tmp49_ = NULL;
+		GtkGrid* _tmp50_ = NULL;
+		GtkMenuBar* _tmp51_ = NULL;
+		gtk_window_set_titlebar ((GtkWindow*) self, NULL);
+		_tmp16_ = g_menu_new ();
+		menu = _tmp16_;
+		_tmp17_ = g_menu_new ();
+		section = _tmp17_;
+		_tmp18_ = menu;
+		_tmp19_ = _ ("Mode");
+		_tmp20_ = section;
+		g_menu_append_submenu (_tmp18_, _tmp19_, (GMenuModel*) _tmp20_);
+		_tmp21_ = _ ("Basic Mode");
+		_tmp22_ = g_menu_item_new (_tmp21_, NULL);
+		item = _tmp22_;
+		_tmp23_ = item;
+		g_menu_item_set_action_and_target (_tmp23_, "win.mode", "s", "basic", NULL);
+		_tmp24_ = section;
+		_tmp25_ = item;
+		g_menu_append_item (_tmp24_, _tmp25_);
+		_tmp26_ = _ ("Advanced Mode");
+		_tmp27_ = g_menu_item_new (_tmp26_, NULL);
+		_g_object_unref0 (item);
+		item = _tmp27_;
+		_tmp28_ = item;
+		g_menu_item_set_action_and_target (_tmp28_, "win.mode", "s", "advanced", NULL);
+		_tmp29_ = section;
+		_tmp30_ = item;
+		g_menu_append_item (_tmp29_, _tmp30_);
+		_tmp31_ = _ ("Financial Mode");
+		_tmp32_ = g_menu_item_new (_tmp31_, NULL);
+		_g_object_unref0 (item);
+		item = _tmp32_;
+		_tmp33_ = item;
+		g_menu_item_set_action_and_target (_tmp33_, "win.mode", "s", "financial", NULL);
+		_tmp34_ = section;
+		_tmp35_ = item;
+		g_menu_append_item (_tmp34_, _tmp35_);
+		_tmp36_ = _ ("Programming Mode");
+		_tmp37_ = g_menu_item_new (_tmp36_, NULL);
+		_g_object_unref0 (item);
+		item = _tmp37_;
+		_tmp38_ = item;
+		g_menu_item_set_action_and_target (_tmp38_, "win.mode", "s", "programming", NULL);
+		_tmp39_ = section;
+		_tmp40_ = item;
+		g_menu_append_item (_tmp39_, _tmp40_);
+		_tmp41_ = _ ("Keyboard Mode");
+		_tmp42_ = g_menu_item_new (_tmp41_, NULL);
+		_g_object_unref0 (item);
+		item = _tmp42_;
+		_tmp43_ = item;
+		g_menu_item_set_action_and_target (_tmp43_, "win.mode", "s", "keyboard", NULL);
+		_tmp44_ = section;
+		_tmp45_ = item;
+		g_menu_append_item (_tmp44_, _tmp45_);
+		_tmp46_ = menu;
+		_tmp47_ = (GtkMenuBar*) gtk_menu_bar_new_from_model ((GMenuModel*) _tmp46_);
+		g_object_ref_sink (_tmp47_);
+		menubar = _tmp47_;
+		_tmp48_ = menubar;
+		gtk_widget_set_visible ((GtkWidget*) _tmp48_, TRUE);
+		_tmp49_ = self->priv->grid;
+		gtk_grid_insert_row (_tmp49_, 0);
+		_tmp50_ = self->priv->grid;
+		_tmp51_ = menubar;
+		gtk_grid_attach (_tmp50_, (GtkWidget*) _tmp51_, 0, 0, 1, 1);
+		_g_object_unref0 (menubar);
+		_g_object_unref0 (item);
+		_g_object_unref0 (section);
+		_g_object_unref0 (menu);
+	}
+	_tmp52_ = equation;
+	_tmp53_ = math_display_new (_tmp52_);
+	g_object_ref_sink (_tmp53_);
 	_g_object_unref0 (self->priv->_display);
-	self->priv->_display = _tmp16_;
-	_tmp17_ = self->priv->grid;
-	_tmp18_ = self->priv->_display;
-	gtk_grid_attach (_tmp17_, (GtkWidget*) _tmp18_, 0, 1, 1, 1);
-	_tmp19_ = self->priv->_display;
-	gtk_widget_show ((GtkWidget*) _tmp19_);
-	_tmp20_ = self->priv->_display;
-	math_display_grabfocus (_tmp20_);
-	_tmp21_ = equation;
-	_tmp22_ = math_buttons_new (_tmp21_);
-	g_object_ref_sink (_tmp22_);
+	self->priv->_display = _tmp53_;
+	_tmp54_ = self->priv->grid;
+	_tmp55_ = self->priv->_display;
+	gtk_grid_attach (_tmp54_, (GtkWidget*) _tmp55_, 0, 1, 1, 1);
+	_tmp56_ = self->priv->_display;
+	gtk_widget_show ((GtkWidget*) _tmp56_);
+	_tmp57_ = self->priv->_display;
+	math_display_grabfocus (_tmp57_);
+	_tmp58_ = equation;
+	_tmp59_ = math_buttons_new (_tmp58_);
+	g_object_ref_sink (_tmp59_);
 	_g_object_unref0 (self->priv->_buttons);
-	self->priv->_buttons = _tmp22_;
-	_tmp23_ = self->priv->grid;
-	_tmp24_ = self->priv->_buttons;
-	gtk_container_add ((GtkContainer*) _tmp23_, (GtkWidget*) _tmp24_);
-	_tmp26_ = self->priv->_buttons;
-	_tmp27_ = math_buttons_get_mode (_tmp26_);
-	_tmp28_ = _tmp27_;
-	if (_tmp28_ != BUTTON_MODE_KEYBOARD) {
-		_tmp25_ = TRUE;
+	self->priv->_buttons = _tmp59_;
+	_tmp60_ = self->priv->grid;
+	_tmp61_ = self->priv->_buttons;
+	gtk_container_add ((GtkContainer*) _tmp60_, (GtkWidget*) _tmp61_);
+	_tmp63_ = self->priv->_buttons;
+	_tmp64_ = math_buttons_get_mode (_tmp63_);
+	_tmp65_ = _tmp64_;
+	if (_tmp65_ != BUTTON_MODE_KEYBOARD) {
+		_tmp62_ = TRUE;
 	} else {
-		_tmp25_ = FALSE;
+		_tmp62_ = FALSE;
 	}
-	self->priv->remove_buttons = _tmp25_;
-	_tmp29_ = self->priv->_buttons;
-	g_signal_connect_object ((GObject*) _tmp29_, "notify::mode", (GCallback) _math_window_mode_changed_cb_g_object_notify, self, 0);
+	self->priv->remove_buttons = _tmp62_;
+	_tmp66_ = self->priv->_buttons;
+	g_signal_connect_object ((GObject*) _tmp66_, "notify::mode", (GCallback) _math_window_mode_changed_cb_g_object_notify, self, 0);
 	math_window_mode_changed_cb (self);
-	_tmp30_ = gtk_css_provider_new ();
-	provider = _tmp30_;
+	_tmp67_ = gtk_css_provider_new ();
+	provider = _tmp67_;
 	gtk_css_provider_load_from_resource (provider, "/org/gnome/calculator/calculator.css");
-	_tmp31_ = gtk_window_get_screen ((GtkWindow*) self);
-	gtk_style_context_add_provider_for_screen (_tmp31_, (GtkStyleProvider*) provider, (guint) GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
+	_tmp68_ = gtk_window_get_screen ((GtkWindow*) self);
+	gtk_style_context_add_provider_for_screen (_tmp68_, (GtkStyleProvider*) provider, (guint) GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
 	_g_object_unref0 (provider);
 	return self;
 }
diff --git a/src/math-window.vala b/src/math-window.vala
index 53f12a1..44b72c8 100644
--- a/src/math-window.vala
+++ b/src/math-window.vala
@@ -53,6 +53,33 @@ public class MathWindow : Gtk.ApplicationWindow
         converter.set_category (null);
         converter.set_conversion (equation.source_units, equation.target_units);
 
+        if (is_desktop ("Unity"))
+        {
+            set_titlebar (null);
+            var menu = new Menu ();
+            var section = new Menu ();
+            menu.append_submenu (_("Mode"), section);
+            var item = new MenuItem (_("Basic Mode"), null);
+            item.set_action_and_target ("win.mode", "s", "basic");
+            section.append_item (item);
+            item = new MenuItem (_("Advanced Mode"), null);
+            item.set_action_and_target ("win.mode", "s", "advanced");
+            section.append_item (item);
+            item = new MenuItem (_("Financial Mode"), null);
+            item.set_action_and_target ("win.mode", "s", "financial");
+            section.append_item (item);
+            item = new MenuItem (_("Programming Mode"), null);
+            item.set_action_and_target ("win.mode", "s", "programming");
+            section.append_item (item);
+            item = new MenuItem (_("Keyboard Mode"), null);
+            item.set_action_and_target ("win.mode", "s", "keyboard");
+            section.append_item (item);
+            var menubar = new Gtk.MenuBar.from_model (menu);
+            menubar.visible = true;
+            grid.insert_row (0);
+            grid.attach (menubar, 0, 0, 1, 1);
+        }
+
         _display = new MathDisplay (equation);
         grid.attach (_display, 0, 1, 1, 1);
         _display.show ();
diff --git a/src/xdg-desktop.c b/src/xdg-desktop.c
index e69de29..c5a4e84 100644
--- a/src/xdg-desktop.c
+++ b/src/xdg-desktop.c
@@ -0,0 +1,115 @@
+/* xdg-desktop.c generated by valac 0.34.4, the Vala compiler
+ * generated from xdg-desktop.vala, do not modify */
+
+/*
+ * Copyright (C) 2014 Robert Ancell.
+ *
+ * This program is free software: you can redistribute it and/or modify it under
+ * the terms of the GNU General Public License as published by the Free Software
+ * Foundation, either version 2 of the License, or (at your option) any later
+ * version. See http://www.gnu.org/copyleft/gpl.html the full text of the
+ * license.
+ */
+
+#include <glib.h>
+#include <glib-object.h>
+#include <stdlib.h>
+#include <string.h>
+
+#define _g_free0(var) (var = (g_free (var), NULL))
+
+
+
+gboolean is_desktop (const gchar* name);
+static void _vala_array_destroy (gpointer array, gint array_length, GDestroyNotify destroy_func);
+static void _vala_array_free (gpointer array, gint array_length, GDestroyNotify destroy_func);
+static gint _vala_array_length (gpointer array);
+
+
+gboolean is_desktop (const gchar* name) {
+	gboolean result = FALSE;
+	gchar* desktop_name_list = NULL;
+	const gchar* _tmp0_ = NULL;
+	gchar* _tmp1_ = NULL;
+	const gchar* _tmp2_ = NULL;
+	const gchar* _tmp3_ = NULL;
+	gchar** _tmp4_ = NULL;
+	gchar** _tmp5_ = NULL;
+	g_return_val_if_fail (name != NULL, FALSE);
+	_tmp0_ = g_getenv ("XDG_CURRENT_DESKTOP");
+	_tmp1_ = g_strdup (_tmp0_);
+	desktop_name_list = _tmp1_;
+	_tmp2_ = desktop_name_list;
+	if (_tmp2_ == NULL) {
+		result = FALSE;
+		_g_free0 (desktop_name_list);
+		return result;
+	}
+	_tmp3_ = desktop_name_list;
+	_tmp5_ = _tmp4_ = g_strsplit (_tmp3_, ":", 0);
+	{
+		gchar** n_collection = NULL;
+		gint n_collection_length1 = 0;
+		gint _n_collection_size_ = 0;
+		gint n_it = 0;
+		n_collection = _tmp5_;
+		n_collection_length1 = _vala_array_length (_tmp4_);
+		for (n_it = 0; n_it < _vala_array_length (_tmp4_); n_it = n_it + 1) {
+			gchar* _tmp6_ = NULL;
+			gchar* n = NULL;
+			_tmp6_ = g_strdup (n_collection[n_it]);
+			n = _tmp6_;
+			{
+				const gchar* _tmp7_ = NULL;
+				const gchar* _tmp8_ = NULL;
+				_tmp7_ = n;
+				_tmp8_ = name;
+				if (g_strcmp0 (_tmp7_, _tmp8_) == 0) {
+					result = TRUE;
+					_g_free0 (n);
+					n_collection = (_vala_array_free (n_collection, n_collection_length1, (GDestroyNotify) g_free), NULL);
+					_g_free0 (desktop_name_list);
+					return result;
+				}
+				_g_free0 (n);
+			}
+		}
+		n_collection = (_vala_array_free (n_collection, n_collection_length1, (GDestroyNotify) g_free), NULL);
+	}
+	result = FALSE;
+	_g_free0 (desktop_name_list);
+	return result;
+}
+
+
+static void _vala_array_destroy (gpointer array, gint array_length, GDestroyNotify destroy_func) {
+	if ((array != NULL) && (destroy_func != NULL)) {
+		int i;
+		for (i = 0; i < array_length; i = i + 1) {
+			if (((gpointer*) array)[i] != NULL) {
+				destroy_func (((gpointer*) array)[i]);
+			}
+		}
+	}
+}
+
+
+static void _vala_array_free (gpointer array, gint array_length, GDestroyNotify destroy_func) {
+	_vala_array_destroy (array, array_length, destroy_func);
+	g_free (array);
+}
+
+
+static gint _vala_array_length (gpointer array) {
+	int length;
+	length = 0;
+	if (array) {
+		while (((gpointer*) array)[length]) {
+			length++;
+		}
+	}
+	return length;
+}
+
+
+
diff --git a/src/xdg-desktop.vala b/src/xdg-desktop.vala
index e69de29..cbcbbed 100644
--- a/src/xdg-desktop.vala
+++ b/src/xdg-desktop.vala
@@ -0,0 +1,22 @@
+/*
+ * Copyright (C) 2014 Robert Ancell.
+ *
+ * This program is free software: you can redistribute it and/or modify it under
+ * the terms of the GNU General Public License as published by the Free Software
+ * Foundation, either version 2 of the License, or (at your option) any later
+ * version. See http://www.gnu.org/copyleft/gpl.html the full text of the
+ * license.
+ */
+
+private bool is_desktop (string name)
+{
+    var desktop_name_list = Environment.get_variable ("XDG_CURRENT_DESKTOP");
+    if (desktop_name_list == null)
+        return false;
+
+    foreach (var n in desktop_name_list.split (":"))
+        if (n == name)
+            return true;
+
+    return false;
+}
