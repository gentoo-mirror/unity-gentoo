From 24a40aadce621d01ede0d4add76599145778b6f8 Mon Sep 17 00:00:00 2001
From: Timo Jyrinki <timo.jyrinki@iki.fi>
Date: Fri, 14 Sep 2012 09:46:57 +0300
Subject: [PATCH] Support 's' to 'as' migrations v2

If a string's migration target is not a string, try to migrate it as a string array instead. It is a common change in schemas, so this is needed for example when migrating some metacity keys to org.gnome.desktop.wm.keybindings.
---
 gsettings/gsettings-data-convert.c |   22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

Index: gconf-3.2.6/gsettings/gsettings-data-convert.c
===================================================================
--- gconf-3.2.6.orig/gsettings/gsettings-data-convert.c	2013-01-23 11:17:02.047020067 +0100
+++ gconf-3.2.6/gsettings/gsettings-data-convert.c	2013-01-23 11:17:02.043020067 +0100
@@ -238,8 +238,26 @@
                 g_print ("Set key '%s' to string '%s'\n", keys[j],
                          gconf_value_get_string (value));
               else
-                g_settings_set (settings, keys[j], "s",
-                                gconf_value_get_string (value));
+                {
+                  GVariant *range, *type;
+                  range = g_settings_get_range (settings, keys[j]);
+                  g_variant_get (range, "(&sv)", NULL, &type);
+
+                  if (g_variant_is_of_type (type, G_VARIANT_TYPE_STRING_ARRAY))
+                    {
+                      g_settings_set (settings, keys[j], "s",
+                                      gconf_value_get_string (value));
+                    }
+                  else
+                    {
+                      if (verbose)
+                        g_debug ("Setting the target key '%s' as a string not possible, converting the string to a string array.\n", keys[j]);
+                      const gchar *array[2] = { gconf_value_get_string (value), NULL };
+                      g_settings_set_strv (settings, keys[j], array);
+                    }
+                  g_variant_unref (type);
+                  g_variant_unref (range);
+                }
               break;
 
             case GCONF_VALUE_INT:
